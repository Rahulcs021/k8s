apiVersion: v1
kind: Service
metadata:
  name: etcd-client
  namespace: &&build_namespace
spec:
  type: NodePort
  ports:
  - name: etcd-client-port
    port: 2379
    protocol: TCP
    targetPort: 2379
  selector:
    app: etcd1

---

apiVersion: v1
kind: Pod
metadata:
  labels:
    app: etcd1
    etcd_node: etcd1
  name: etcd1
  namespace: &&build_namespace
spec:
  containers:
  - command:
    - /usr/local/bin/etcd
    - --name
    - etcd1
    - --data-dir=/var/etcd/data
    - --initial-advertise-peer-urls
    - http://etcd1:2380
    - --listen-peer-urls
    - http://0.0.0.0:2380
    - --listen-client-urls
    - http://0.0.0.0:2379
    - --advertise-client-urls
    - http://etcd1:2379
    - --initial-cluster
    - etcd1=http://etcd1:2380
    - --initial-cluster-state
    - new
    image: quay.io/coreos/etcd:v3.5.7-arm64
#    image: quay.io/coreos/etcd:3.5.8
    name: etcd0
    ports:
    - containerPort: 2379
      name: client
      protocol: TCP
    - containerPort: 2380
      name: server
      protocol: TCP
    volumeMounts:
    - name: etcd-data
      mountPath: /var/etcd/data
  restartPolicy: Always
  nodeSelector:
    app: &&nodegroup_name
  volumes:
  - name: etcd-data
    persistentVolumeClaim:
      claimName: etcd-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: service1
  namespace: &&build_namespace
spec:
  ports:
  - name: etcd-client-port
    port: 2379
    protocol: TCP
    targetPort: 2379
  - name: etcd-server-port
    port: 2380
    protocol: TCP
    targetPort: 2380
  selector:
    app: etcd1

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-pvc
  namespace: &&build_namespace
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc  # Replace with your EFS StorageClass name
  resources:
    requests:
      storage: 100Mi
