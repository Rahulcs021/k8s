apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &&build_deployment
  namespace: &&build_namespace
  labels:
    name: &&build_deployment
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: &&alb_name
    alb.ingress.kubernetes.io/group.name: &&ingress_group_name
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: &&health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "2"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthy-threshold-count: "3"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true, idle_timeout.timeout_seconds=180
    # alb.ingress.kubernetes.io/target-group-attributes: load_balancing.algorithm.type=least_outstanding_requests
    # alb.ingress.kubernetes.io/target-node-labels: app=StorageService
 
 ## SSL Settings
    # alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:696292622193:certificate/d01770a2-7210-4747-bec6-fdaeb6146a02
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:717633479662:certificate/8fb30503-e71f-47de-8923-7a5995d0065e
spec:
  ingressClassName: alb
  rules:
    - host: &&url
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service: 
                name: &&build_deployment-service
                port:
                  number: &&port
